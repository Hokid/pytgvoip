version: 0.0.{build}

branches:
  only:
    - master

skip_non_tags: true

image: Visual Studio 2017
platform: x64

environment:
  BUILD: true
  PYPI_PASSWORD:
    secure: bBLT+ICiuwrkYZEBrL++Jw==

  matrix:
    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "32"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x86"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x86"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x86"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x64"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x86"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"
      LIBTGVOIP_JOB: "Environment: PLATFORM=x64"

clone_folder: c:\projects\pytgvoip

install:
  - ps: if (-not(Test-Path($env:PYTHON))) { & ci_scripts\install.ps1 }
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  - python -m pip install wheel pip twine -U
  - appveyor DownloadFile "https://ci.appveyor.com/api/projects/bakatrouble/libtgvoip/artifacts/out/Release/libtgvoip.dll.zip?job=%LIBTGVOIP_JOB%"
  - 7z x libtgvoip.dll.zip
  - git submodule update --init --recursive
  - git clone https://github.com/bakatrouble/libtgvoip/ 3rdparty/libtgvoip
  - cd 3rdparty/libtgvoip
  - git checkout msvc_static
  - cd ../..

build_script:
  - set TGVOIP_INCLUDE_ROOT=3rdparty/libtgvoip
  - set TGVOIP_LIBRARY_ROOT=.
  - python setup.py build

after_build:
  - python setup.py bdist_wheel
  - ps: ls dist

deploy_script:
  - echo "Starting Artifact Deployment"
  # populate pypirc file for twine
  - echo [distutils]                                  > %USERPROFILE%\\.pypirc
  - echo index-servers =                             >> %USERPROFILE%\\.pypirc
  - echo     pypi                                    >> %USERPROFILE%\\.pypirc
  - echo [pypi]                                      >> %USERPROFILE%\\.pypirc
  - echo username=bakatrouble                        >> %USERPROFILE%\\.pypirc
  - echo password=%PYPI_PASSWORD%                    >> %USERPROFILE%\\.pypirc
  # upload to pypi for windows
  - set HOME=%USERPROFILE%
  - twine upload --skip-existing dist/*.whl 2>$null
  - echo "Finished Artifact Deployment"

artifacts:
  - path: dist\*
